name: Build and Deploy e-test-svalerdos

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4
    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Configure Maven settings
      run: |
        mkdir -p ~/.m2
        echo "<settings>
          <servers>
            <server>
              <id>anypoint-exchange-v3</id>
              <username>${{ secrets.ANYPOINT_PLATFORM_USERNAME }}</username>
              <password>${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}</password>
            </server>
          </servers>
        </settings>" > ~/.m2/settings.xml
    - name: Build with Maven
      env:
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      run: |
        # Eliminar dependencias problemáticas
        rm -rf ~/.m2/repository/com/github/everit-org
        rm -rf ~/.m2/repository/org/everit
        
        # Compilar omitiendo pruebas
        mvn -B clean package --file pom.xml -Dmaven.test.skip=true
    - name: Upload artifact 
      uses: actions/upload-artifact@v4
      with:
          name: artifacts
          path: target/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v4
    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Configure Maven settings
      run: |
        mkdir -p ~/.m2
        echo "<settings>
          <servers>
            <server>
              <id>anypoint-exchange-v3</id>
              <username>${{ secrets.ANYPOINT_PLATFORM_USERNAME }}</username>
              <password>${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}</password>
            </server>
          </servers>
        </settings>" > ~/.m2/settings.xml
    - uses: actions/download-artifact@v4
      with:
        name: artifacts
        path: target/
    - name: Deploy to Sandbox
      env:
        ANYPOINT_USERNAME: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }}
        ANYPOINT_PASSWORD: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      run: |
        # Mostrar el artefacto que se va a desplegar
        echo "Artefacto a desplegar:"
        ls -la target/
        
        # Desplegar directamente con parámetros en línea de comandos
        echo "Desplegando la aplicación..."
        mvn deploy -DmuleDeploy \
        -Dmule.artifact=$(ls target/*.jar | head -1) \
        -Danypoint.username="${ANYPOINT_USERNAME}" \
        -Danypoint.password="${ANYPOINT_PASSWORD}" \
        -Ddecryption.key="${ENCRYPTION_KEY}" \
        -Dencryption.key="${ENCRYPTION_KEY}" \
        -Dapp.runtime=4.9.3 \
        -Dapp.name=e-test-svalerdos \
        -Denv=Sandbox \
        -DdeploymentType=CLOUDHUB_V2 \
        -Ddeployment.target=Cloudhub-US-East-2 \
        -Dreplicas=1 \
        -DvCores=0.1 \
        -Djava.version=17 \
        -DskipTests